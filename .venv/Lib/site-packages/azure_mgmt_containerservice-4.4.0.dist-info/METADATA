Metadata-Version: 2.1
Name: azure-mgmt-containerservice
Version: 4.4.0
Summary: Microsoft Azure Container Service Management Client Library for Python
Home-page: https://github.com/Azure/azure-sdk-for-python
Author: Microsoft Corporation
Author-email: azpysdkhelp@microsoft.com
License: MIT License
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: License :: OSI Approved :: MIT License
Requires-Dist: msrest (>=0.5.0)
Requires-Dist: msrestazure (<2.0.0,>=0.4.32)
Requires-Dist: azure-common (~=1.1)
Requires-Dist: azure-mgmt-nspkg ; python_version<'3.0'

Microsoft Azure SDK for Python
==============================

This is the Microsoft Azure Container Service Management Client Library.

Azure Resource Manager (ARM) is the next generation of management APIs that
replace the old Azure Service Management (ASM).

This package has been tested with Python 2.7, 3.4, 3.5, 3.6 and 3.7.

For the older Azure Service Management (ASM) libraries, see
`azure-servicemanagement-legacy <https://pypi.python.org/pypi/azure-servicemanagement-legacy>`__ library.

For a more complete set of Azure libraries, see the `azure <https://pypi.python.org/pypi/azure>`__ bundle package.


Compatibility
=============

**IMPORTANT**: If you have an earlier version of the azure package
(version < 1.0), you should uninstall it before installing this package.

You can check the version using pip:

.. code:: shell

    pip freeze

If you see azure==0.11.0 (or any version below 1.0), uninstall it first:

.. code:: shell

    pip uninstall azure


Usage
=====

For code examples, see `Container Service Management
<https://docs.microsoft.com/python/api/overview/azure/containerservice>`__
on docs.microsoft.com.


Provide Feedback
================

If you encounter any bugs or have suggestions, please file an issue in the
`Issues <https://github.com/Azure/azure-sdk-for-python/issues>`__
section of the project.


.. :changelog:

Release History
===============

4.4.0 (2019-01-09)
++++++++++++++++++

**Features**

- Added operation ManagedClustersOperations.reset_service_principal_profile
- Added operation ManagedClustersOperations.reset_aad_profile

4.3.0 (2018-12-13)
++++++++++++++++++

**Features**

- Support for Azure Profiles
- OpenShift ManagedCluster (preview)

This package also adds
Preview version of ManagedCluster (AKS 2018-08-01-preview), this includes the following breaking changes and features, if you optin for this new API version:

**Features**

- Model ManagedClusterAgentPoolProfile has a new parameter type
- Model ManagedClusterAgentPoolProfile has a new parameter max_count
- Model ManagedClusterAgentPoolProfile has a new parameter enable_auto_scaling
- Model ManagedClusterAgentPoolProfile has a new parameter min_count

**Breaking changes**

- Parameter count of model ManagedClusterAgentPoolProfile is now required
- Model ManagedClusterAgentPoolProfile no longer has parameter storage_profile

**Note**

- azure-mgmt-nspkg is not installed anymore on Python 3 (PEP420-based namespace package)

4.2.2 (2018-08-09)
++++++++++++++++++

**Bugfixes**

- Fix invalid definition of CredentialResult

4.2.1 (2018-08-08)
++++++++++++++++++

**Bugfixes**

- Fix some invalid regexp
- Fix invalid definition of CredentialResult

4.2.0 (2018-07-30)
++++++++++++++++++

**Features**

- Add managed_clusters.list_cluster_admin_credentials
- Add managed_clusters.list_cluster_user_credentials
- Add managed_clusters.update_tags

**Bugfixes**

- Fix incorrect JSON description of ManagedCluster class

4.1.0 (2018-06-13)
++++++++++++++++++

**Features**

- Add node_resource_group attribute to some models

4.0.0 (2018-05-25)
++++++++++++++++++

**Features**

- Added operation ManagedClustersOperations.get_access_profile
- Updated VM sizes
- Client class can be used as a context manager to keep the underlying HTTP session open for performance

**General Breaking changes**

This version uses a next-generation code generator that *might* introduce breaking changes.

- Model signatures now use only keyword-argument syntax. All positional arguments must be re-written as keyword-arguments.
  To keep auto-completion in most cases, models are now generated for Python 2 and Python 3. Python 3 uses the "*" syntax for keyword-only arguments.
- Enum types now use the "str" mixin (class AzureEnum(str, Enum)) to improve the behavior when unrecognized enum values are encountered.
  While this is not a breaking change, the distinctions are important, and are documented here:
  https://docs.python.org/3/library/enum.html#others
  At a glance:

  - "is" should not be used at all.
  - "format" will return the string value, where "%s" string formatting will return `NameOfEnum.stringvalue`. Format syntax should be prefered.

- New Long Running Operation:

  - Return type changes from `msrestazure.azure_operation.AzureOperationPoller` to `msrest.polling.LROPoller`. External API is the same.
  - Return type is now **always** a `msrest.polling.LROPoller`, regardless of the optional parameters used.
  - The behavior has changed when using `raw=True`. Instead of returning the initial call result as `ClientRawResponse`,
    without polling, now this returns an LROPoller. After polling, the final resource will be returned as a `ClientRawResponse`.
  - New `polling` parameter. The default behavior is `Polling=True` which will poll using ARM algorithm. When `Polling=False`,
    the response of the initial call will be returned without polling.
  - `polling` parameter accepts instances of subclasses of `msrest.polling.PollingMethod`.
  - `add_done_callback` will no longer raise if called after polling is finished, but will instead execute the callback right away.

**Bugfixes**

- Compatibility of the sdist with wheel 0.31.0

3.0.1 (2018-01-25)
++++++++++++++++++

**Bugfixes**

* Fix incorrect mapping in OrchestratorVersionProfileListResult

3.0.0 (2017-12-13)
++++++++++++++++++

* Flattened ManagedCluster so there is no separate properties object
* Added get_access_profiles operation to managed clusters

2.0.0 (2017-10-XX)
++++++++++++++++++

**Features**

* Managed clusters

**Breaking changes**

* VM is now require for master profile (recommended default: standard_d2_v2)

1.0.0 (2017-08-08)
++++++++++++++++++

* Initial Release extracted from azure-mgmt-compute 2.1.0


